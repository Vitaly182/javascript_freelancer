//syntax_basics

console.log('Учим');
console.log('JS');


/*
ЗНАЧЕНИЯ
В Javascript есть несколько типов значений (values):
фиксированные значения(литералы),
значения констант,
значения переменных.
*/

//Примеры литералов
//25                            //литерал целого числа
//23.8                          //литерал дробного числа
//'Javascript'                  //литерал строки
//"Javascript"                  //литерал строки
//[]                            //литерал массива
//[15, 7, 89]                   //литерал массива
//{ }                            //литерал объекта
//{
//    name: 'Фрилансер',
//    surname: 'по жизни'
//}                              //литерал объекта
//(ab | bc)                        //литерал регулярного выражения

//В языках программирования константы и переменные
//используются для хранения значений данных

const MAX_VALUE = 17;            //константа
var section = 'JS'               // переменная
let arr = ['HTML', 'CSS', 'JS']    // переменная

/*
ОПЕРАТОРЫ
В Javascript имеется очень много различных операторов
Они обозначают операцию, которую нужно произвести
*/

//Примеры операторов 
//* / + - = и т.д.
console.log('Учим' + ' JS');


/*
ВЫРАЖЕНИЯ
Выражение - это комбинация значений,
переменных и операторов, которые либо присваивают переменной значение, 
либо возвращают какое-то значение без его присваивания
*/

//Примеры выражения
let num1 = 4; //выражение присвоения
console.log(num1);
'Учим' + 'JS'; //выражение без присвоения

/*
КЛЮЧЕВЫЕ СЛОВА
Инструкции Javascript часто начинаются с ключевого слова
(keyword). Оно предназначено для того, чтобы определить какое 
действие Javascript необходимо выполнить
*/

//Примеры ключевого слова
let num2 = 'Учим JS'; //указываем браузеру создать переменную
console.log(num2);

/*
БЛОК ИНСТРУКЦИЙ
Javascript инструкции можно сгруппировать с помощью 
так называемого блока, по сути фигурных скобок {...}
Как правило, используется в функциях, циклах и так далее
*/

//Примеры блока инструкций
function name1() {
    console.log('иструкция1');
    console.log('иструкция2');
}
name1();

/*
ЧУВСТВИТЕЛЬНОСТЬ К РЕГИСТРУ
Javascript является регистрозависимым языком
Это значит, что ключевые слова, переменные, имена функций и 
другие идентификаторы языка должны содержать одинаковые наборы 
прописных и строчных букв
*/

/*
ПРОБЕЛЫ
Рекомендуется добавлять пробелы в инструкции,
чтобы сделать код более читаемым
Javascript игнорирует несколько пробелов
*/

//Следующие строки эквивалентны
let str1 = 'Текст';
let str2 = 'Текст';

/*
   Как правило пробелы принято
   размещать вокруг операторов: =, +, -, * и /
*/

/*
ДЛИНА СТРОКИ
Для лучшеё читаемости кода рекомендуется избегать строк
с длиной более 80 символов. Если Javascript инструкция 
имеет большую длину, то её желательно разорвать.
В большинстве случаев разрыв инструкции лучше
осуществить после какого-нибудь оператора
*/

//Пример
document.getElementById('text').innerHTML =
    'Текст для некого поля';

/*
КАВЫЧКИ
В Javascript могут использоваться одинарные, двойные
либо обратные кавычки. 
Открытая кавычка без закрытой вызовет ошибку и наоборот
*/

//Пример
console.log('Учим JS')
console.log("Учим JS")
console.log(`Учим JS`)

/*
чтобы старый код адекватно работал по умолчанию
новые функции выключены и чтобы их использовать
надо явно их включить запись - "use strict"
эта запись должна быть размещена над всем
выполняемым кодом
перед записью use strict
допускаются только комментарии, т.е. невыполняемый код
*/
